---
- name: Add Vault chart repo
  community.kubernetes.helm_repository:
    name: hashicorp
    repo_url: "https://helm.releases.hashicorp.com"

- name: Update helm repo
  command: helm repo update

- name: Deploy Vault chart inside Vault namespace with values
  community.kubernetes.helm:
    name: vault
    chart_ref: hashicorp/vault
    release_namespace: vault
    create_namespace: yes
    force: yes
    values:
      injector:
        tolerations: |
          - key: node-role.kubernetes.io/gw
            effect: NoSchedule
      server:
        tolerations: |
          - key: node-role.kubernetes.io/gw
            effect: NoSchedule
        # ha:
        #   enabled: true
        #   replicas: 3
        #   raft:
        #     enabled: true

- name: Pause for 1 minutes for vault images downloaded and started
  pause:
    minutes: "1"
    prompt: "Wait for Helm release is initialized"

- name: Wait for vault pods become ready
  shell: "kubectl wait --namespace=vault --for=condition=Initialized pod/vault-0 --timeout=60s"
  register: vault_ready

- name: Debug vault init result
  debug:
    var: vault_ready

- name: Init vault operator
  shell: "kubectl exec vault-0 -n vault -- vault operator init -format=json | tee /tmp/vault-unseal-keys.json"
  register: vault_init_result
  when: vault_ready.stdout.find("condition met") != -1

# - name: Get Vault unseal key to ansible executor host
#   command: "kubectl cp vault/vault-0/tmp/vault-unseal-keys.json /tmp/vault-unseal-keys.json"
#   when: vault_init_result.stdout.find("unseal_keys_b64") != -1

# - name: Fetch Vault unseal key file to ansible host
#   fetch:
#     src: /tmp/vault-unseal-keys.json
#     dest: /home/{{ localhost_user }}/
#     flat: yes

# - name: Set Vault unseal key file mode
#   file: 
#     path: /home/{{ localhost_user }}/vault-unseal-keys.json
#     owner: "{{ localhost_user }}"
#     group: "{{ localhost_user }}"
#     mode: 0400
#   delegate_to: localhost

# - name: Delete Vault unseal key file from ansible executor
#   file:
#     path: /tmp/unseal-keys.json
#     state: absent

- name: Get unseal key from output
  set_fact:
    root_token: "{{ vault_init_result.stdout | from_json | json_query('root_token') }}"
    unseal_key: "{{ vault_init_result.stdout | from_json | json_query('unseal_keys_b64') }}"

- include_tasks: unseal_vault.yml
  loop: "{{ vault_pod_names }}"
  loop_control:
    loop_var: pod_name

- name: Create vault init bash script
  template:
    dest: /tmp/vault_init.sh
    src: vault_init.sh.j2
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0555
  delegate_to: localhost

- name: Copy file to pod
  shell: kubectl cp /tmp/vault_init.sh vault-0:/tmp/vault_init.sh -n vault

- name: Delete tmp file
  file:
    dest: /tmp/vault_init.sh
    state: absent
  delegate_to: localhost

- name: Execute vault init script
  shell: kubectl exec vault-0 -n vault -- /bin/sh -c "/tmp/vault_init.sh"
  register: vault_init_script_result
     
# - name: Get Vault unseal key to ansible executor host
#   command: "kubectl cp vault/vault-0/tmp/{{ root_ca_cert_filename }}.json /tmp/{{ root_ca_cert_filename }}.json"
#   when: vault_init_script_result.stdout.find("Success!") != -1

# - name: Fetch Vault unseal key file to ansible host
#   fetch:
#     src: /tmp/{{ root_ca_cert_filename }}.json
#     dest: /home/{{ localhost_user }}/
#     flat: yes

# - name: Set Vault unseal key file mode
#   file: 
#     path: /home/{{ localhost_user }}/{{ root_ca_cert_filename }}.json
#     owner: "{{ localhost_user }}"
#     group: "{{ localhost_user }}"
#     mode: 0400
#   delegate_to: localhost

# - name: Delete Vault unseal key file from ansible executor
#   file:
#     path: /tmp/{{ root_ca_cert_filename }}.json
#     state: absent
    

